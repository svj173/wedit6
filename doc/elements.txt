Элементы книги.

Принципы, структуры, работы.

--------------------------------------------------------------------------------------------

Есть структура elements, которая описывает стили - оставить ее, подстроив под две новые структуры - элементы (уровень и название) и типы.

Функционал
1) структура bookStructure состоит из трех блоков
- описание элементов
- описание типов
- описание стилей для элементов+типов    -- лишнее
2) При парсинге из файла, если ошибка в одном из блоков - меняется вся структура bookStructure на дефолтную
(сообщение - в Журнале ошибок и красная лампа внизу - есть ошибки, на которые не выскакивал диалог - ERROR-1, ERROR-2)
3) Редактирвоание
- Только когда все тексты книги закрыты
- Валидация
  - При удалении - на глубину элементов в книге - запрет удалять существующие
  - Если хоть что-то изменилось - синхр с описанием стилей  --- как валидировать? ведь пользователь может добавить новый тип и закрыть редактор. А как же стили для этого типа? ----- ??? -- нет стилей.


Этапы реализации
+1) Структура типов   -- пока без применения в книге
 - сохранение в файле
 - парсинг
+2) Структура элементов   -- пока без применения в книге
 - сохранение в файле
 - парсинг
+3) Создание глобальной дефолтной структуры
 - элементы
 - типы
 - стили  -- не нужны
-4) Создание стилей (правка существующего)    -- НЕТ

5) Замена старого функционала на новый - замена применения BookElement


Положения для элементов-типов книги (не типов книг)
1) Иконки на элементы - одни для всех
2) У типа - только свой цвет
3) При отображении в дереве, тексте
 - применяется стиль элемента
 - но цвет берется от типа
 - возможно также и bold, italic (толщина, наклон, подчеркивание)
 - иконка - подкрашивать ее цветом типа (легкое изменение иконки элемента книги, книги)

--------------------------------------------------------------------------------------------

Продумать и расписать алгоритм отображения титлов в дереве, в тексте, и обратное преобразование из текста.


1) Отображение титлов в дереве
 - Взять фонт (кроме размера) - из Элемента
 - Взять цвет и тип (bold, italic...) из типа (Нет типа - ничего не берем) и заменить в отрисовке.
 - Взять из типа цвет фона иконки и подкрасить фон, если есть.


2) Отображение титлов в тексте
 - Взять фонт  - из Элемента
 - Взять цвет и тип (bold, italic...) из типа (Нет типа - ничего не берем) и заменить в отрисовке.
 - styleName=levelNumber_typeEnName


3) Обратное преобразование из текста
 - выделяем имя стиля
 - парсим имя на level / type
 - берем из bookStructure элемент и тип
 - заносим их в обьект

--------------------------------------------------------------------------------------------

Продумать совместимость старого варианта хранения текста в файле с новым
 -- При парсинге файла

--------------------------------------------------------------------------------------------

Обьекты

1) WBookElement
 - цвет - для дерева и текста
 - размер - для текста
 - тип    - для текста (bold, italic...)
 - расположение - влево, вправо, по центру
 - маргин - в символах (пикселях) - для крайних расположений (отступ слева или справа)

2) WType
 - цвет     - для дерева и текста (заменяет цвет элемента)
 - тип      - для текста (bold, italic...)   -- например, все наклонные.  -- накладывается на тип стиля элемента
 - цвет иконки - для подсветки стандартной иконки в дереве.


--------------------------------------------------------------------------------------------


Алгоритм редактирования элементов, типов.
- Вызывается
   -- правой кнопкой на самом элементе в дереве - только для конкретного элемента.
   -- общая функция редактирвоания - из тул-бар книги
- Анализ на наличие открытых текстов книги
   -- или не нужен? правая кнокпк  - толкьо стиль. А общая кнопка - смотрит открытые тексты и запрещается если есть - надписью в тул-типе.


--------------------------------------------------------------------------------------------

Метка стиля в тексте = уровень_элемента+тип (а не название элемента)

Редактор стилей - индикатор - было изменение.

we-6
BookStructure - отдельные блоки (и разные диалоги):
1) описание элементов - книга, часть, глава...
 - добавить, удалить, редактирвоать (название)
2) описание типов элементов - work, hidden...
 - добавить, удалить, редактирвоать (название)
3) описание стилей - элемент+тип.  -- текущий блок 'elements' - оставить как есть
Необходимо синхронизовывать изменения с описанием стилей - в т.ч. и при ошибках загрузки-парсинга.

we-6. getDefaultStructure ( int ic )
- ic - это кол-во элементов в структуре. Например, если у книги кол-во известно, но при парсинге - поломалось. (Надо ли это?)

we-6
Редактирвоание элементов опсиания  - опсиание стилей. Варианты:
1) Вверху - выпадашка со спсиком типов. Стили - один. Просто выбираем комбинации.
2) Все возможные комбинации перечислены списком - уже со своими стилями.

Редактор типов.
Флаг - дефолтный тип (для данной книги).

we-6/ Элементы
а) элементы
- размер
- цвет - в дереве, тексте
б) тип
- цвет заголовка
- подцвет подкраски иконки в дереве.

we-6. Вместо styleName - исп два параметра: elementLevel, type -- ?

we-6. Редактор стилей.
Если есть открытые тексты, то разрешено парвить только стиль заголовка - и все.

we-6
Типы книг - иконки
- release - зеленый
- work - серый
- дописывается - оранжевый.


-3)
Типы книг и глав
1) Типы книг  (уровень BookTitle)
 - прописаны в отдельном конфиг-файле редактора bookType.xml
 - примерный перечень:
   -- draft   - черновик
   -- work    - пишется (в работе),
   -- release - написана (релиз)
   -- Писать немедленно (в первую очередь) - например, Круиз.
   -- дописывается - оранжевый.
2) Типы глав    (уровень BookNode)
 - Описано в bookStructure книги (т.е. у каждой книги - свой набор типов, который может редактироваться - книги разные - эссе, лит критика, научная работа и т.д. - свои исключительные типы глав)
 - примерный перечень:
   -- скрытая    (служебная - hidden)
   -- продумать - think
   -- готово     (release)
   -- draft   - черновик
   -- work   - в работе  (либо отсутствует)
3) В дереве отмечаются
 -? своим цветом    - стиль накладывается на элемент+тип
 - иконкой
4) Ф-я: Редактор типов книг
5) Параметры типа:
 - en имя
 - русское имя
 - описание
 -? шрифт (цвет и стиль - т.к. размер задается единый для всего дерева) -- ?? Для главы и части - цвет для hidden - разный. -- НЕ применять? Или только для типов  книг?
 - путь до иконки
6) Генерация дефолтных значений
 - bookTitle - ProjectTools.getDefaultBookTitleTypes
 - bookNode  - BookStructureTools.getDefaultBookNodeTypes
+7) BookTypesStaxParser
 - читает как файл проекта для bookTitle, так и тег в bookStructure.
 При ошибках - подставляет дефолтный набор типов.
 При редактирвоании типов, кнопка - Скинуть в дефолтный. (Но здесь применять Undo/Redo для возможного отказа от сброса - EditDialogWithUndoRedo).
 -- BookTypesStaxParser



