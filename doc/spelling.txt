

Праивла поведения редактора
Алгоритм:
1) После ввода любого символа проверять все слова, кроме того где находиться курсор
2) Если с момента последнего ввода символа прошло время T, то проверяем слово в котором находится курсор
3) При перемещении курсора в неверно написанное слово подчеркивание снимать не нужно до тех пор пока не будет введен хотя бы один символ (либо стерт)


Методы проверок.
1) http://habrahabr.ru/post/202908/
 - модель Noisy channel
 - пример на СИ
2) https://www.languagetool.org/
 - написана на java - 81 Мб
 - инкапсулируется в офис либо как десктоп.
3) http://gmdidro.googlepages.com/Ru_HowtoWriteaSpellingCorrector.html
4) http://habrahabr.ru/post/105450/
 - Penisland, или как написать спеллчекер

Есть хорошая статья Питера Норвига, в которой он рассказывает как написать спеллчекер в 20 строк кода. В этой статье он показывает как поисковые системы могут исправлять ошибки в запросах. И делает это довольно элегантно. Однако, у его подхода есть два серьезных недостатка. Во-первых, исправление более трех ошибок требует больших ресурсов. А гугл, кстати, неплохо справляется и с четырьмя ошибками. Во-вторых, нет возможности проверки связного текста.
Итак, хочется исправить эти проблемы. А именно, написать корректор коротких фраз или запросов, который:
    1) умел бы выявлять три (и более) ошибки в запросе;
    2) умел бы проверять «разорванные» или «слипшиеся» фразы, например expertsexchange — experts_exchange, ma na ger — manager
    3) не требовал много кода для реализации
    4) мог бы достраиваться до исправления ошибок на других языках и других типов ошибок



