 Концепции

 1) ИД табика. - Заносится в Таб-Панель при создании
  - Сборники - директория сборника    (т.е. вкладка Сборника содержит ИД которое является директорией расположения данного Сборника)
  - Книги - файл книги.
  - Глава - полный путь имени до корня.

 2) Типы элементов книги - не общие для всех.
 Т.к. у самой книги это: в работе, дописана, в черновиках.
 Элементы: рабочие, служебные (скрытые), спец в который скидываются тексты издалека  и т.д.

 3) Безусловно сохраняем изменения в текстах и в структуре книги - как в IDEA.

--------------------------------------------------------------------
1) Добавить новую функцию в систему.
 - FunctionManager.init
    add ( new ZipAllProjectsFunction()  );

2) Добавить функцию в главный тул-бар
 - ContentFrame.createToolBar
    toolbar.addFunction ( FunctionId.SAVE_ALL_PROJECTS );
 
3) Добавить функцию в тул-бар над панелями
 а) Сборника
   - ContentFrame - в конструкторе
 б) Книги
 в) Тексты
   - ContentFrame.createBooksAndTextPanel

4) Добавить функцию в главное меню
 - WEMenuBar - методы по главным меню

5) Добавить функцию в контекстное меню дерева  (здесь же добавляются иконки над панелями)
 - Сборника
     - ContentFrame.createProjectPopUpMenu
 - Книг
 - Текстов
     - ContentFrame.createBooksAndTextPanel    - иконки над панелями
     - ContentFrame.createBookPopUpMenu        - контекстное меню дерева

5) Занести в буфер
      Buffer.setBuffer ( newNodes );

6) Взять обьект
      bookNode = ( BookNode ) treeObj.getUserObject();


--------------------------------------------------------------------

3) Реализованные функции удалять отсюда и перекидывать в доку пользователя или программиста.

6) Миниатюры. Части: Под вопросом, Доделать, Не принятое, Релиз.

--------------------------------------------------------------------

    ========== Что необходимо сделать ==============

--we6 - разобраться с одинаковыми именами.
В одном тексте две главы с одинаковым именем - Разное.
    - переходы на них
    - сохранение
    - показывать усеченные пути (к началу пути) в имени табика - до символа, на котором названия начинают различаться.
Одинаковые названия глав - в заголвоках табиков показывать усеченные пути, до тех пор пока не будут различаться.
Причем это касается только вновь открываемого табика. (а не цифру в скобках).
Самый первый табик остается без изменений.
-- we-6
   При обращении к ИД книги, эпизода - если его нет - сгенерить.

2) Есть две главы - Обед.
Если открыта первая, то вторую открыть невозможно.
Работаем по полному пути (что надежнее) либо по ИД (что хуже, т.к. ИД динамически генерится).


we-6
1)
все что копируется в буфер - клонируется, без всяких связок  с прошлым. Связки хранятся отдельно - дял восстановления, елси что.
Пряовление
Конверт книги в HTML. Копируешь схему конвертации. Заносишь ее в другую книгу. Там правшиь. А в итоге получаеь и в исходной книге исправленный вариант.
2) текст - тоже имеет категории - чтобы различать эту книгу по видам -  6+, 12+, 18+
При конвертации также указываются какие категории текста применять, какие - игнорировать.
3) конвертер - сигнальные символы
разрешается вводить разные наборы - через пробел или точку с запятой (в тултип)


we-6. Конвертер. Флаг.
- включить инфу об авторае?
Если ДА - то выпадашка (возможно - мультиселект)
- толкьо имя
- имя и почтовый адрес
- имя, аська, почта. телефон


ElementTitleType = on / off  -- Введение, Примечание и прочее.
off - титл выводится как задан, игнорируя задания конвертера.
...
ElementTitleType - флаг - применять игнорирование преобразвоания титла при конвертации (т.е. выводить титл как есть) для тех титлов которые помечены...
Типы эпизодов - Эпилог, Постскриптум, Введение, Вступление - при конвертации - особое парвило вывода титла.

2) img
Почему-то при вставке в книгу из proza/image удалились все файлы, кроме того, который вставлял.

we-6
1) Свойства элемента - меняю на work-hidden - Надо также взводить флаг что было редактирование. А то не сохраняется.


we-6. ConvertTo
1) параметры - служебная инфа о книге - автор, дата изменения, прочее - выводить - не выводить
+2) аннотации - выводить - не выводить

Поиски
Поиск в текущем эпизода - Ctrl-F (правая кнокпа мышки)


we-6.
ConvertTo   ?
Выводить в Итого - Наачльная глава, Конечная глава.

we-6 - конвертеры
копи-паст - для шаблонов.  -- mergeToOther - доделать для всех параметров.

we-6
1) scroll to text - при стартовом открытии запомненной с прошлого раза страницы
2) увеличить (утолщить) курсор.

we-6
Поиск в текущей книге - открывать нижнюю панель под текстом, а не под всем Редактором.
Под Всем - это глобальные функции, не зависимые от текущей книги, сборника и т.д.

we-6 - config.xml
Здесь сделать разбивку Меню - на секции, с ИД. А функйции - писать в какую секцию. (Группы в секциях?)

we-6
convertTo
Флаг - отмечать (выводить) дату написания эпизода (начало - конец)

we-6 convertTo -
1) Диалог запроса.
Предварительное Сообщение  - данная функция работает пока еще некачественно.
2) не processTitle/processText а processNode
3) гугл - java poi setFirstI... example

we-6
1) toHTML - обрабатывать стиль простого текста (color, align и т.д.).
2) img-save - автоматом добавлять пустую строку.
3) Акции.
- убрать переносы строк.
- добавить акцию
-- сохранить текст по старинке - Тултип: Вставлять пустые строки после заголовков.
-- открыть текст по старинке
ПС. Здесь либо ругаться что тексты не закрыты, либо в диалоге спрашивать - Закрыть текст? И кнопка: Закрыть тексты и продолжить.
4) toDOC - Начать создавать диалог (общий для всех но с натсраиваемымми атрибутами - наприемр: для конверта в простой текст - не собрать Оглавление?)
5) toTXT - Здесь правые-левые оступы и красная строка - пробелами.
цветовые настройки текста игнорируются - толкьо шрифт и размер.
6) Диалог конвертации
Общие параметры
- Выводить название книги
- Выводить автора
Настраиваемые параметры
- Включать HTML заголовок - толкьо у toHTML.
Т.е. в универсальный диалог также передается блок индивидуальных для данного режима параметров.
7) Диалог Свойства.
Аннотация - как TextArea.
8) Save - если нет ничего : Нет изменений.

we-6 - делать
1) toHTML - применять <B> - Для Миниатюр и ЖН
+2) Save books - Измененные книги выводить первыми. Потмо - все остальное - либо их вообще не выводить - лишняя инфа.

we-6
1) Акция toText - обнулять все атрибуты.
2) toHTML - применять color_text - B, I и т.д.
3) у каждой книги - свой уникальный ИД.

we-6
ConvertTo - fb2, epub, mobi и т.д.

we-6
1) toRTF
2) Разные эпизоды с одинаоквым названием - щелкаешь на один а открывается другой - исправть.

we-6. Гиперстраница
1) создать гиперстраницу
- здесь в тексте ничего нельзя редактирвоать, толкьо доабвлять из диалога формы. (удалять-редактирвоать)
- типы-фильтры - отдельный диалог редактирвоания
2) создать страницу-ссылку на гипестраницу.
- здесь указываем по какому фильтру отсеивается инфа. Напрример - по титлу текущей книги
3) гиперстраница имеет фильтры по типам -
- название книги
- название жанра (например, где вывести все издателсьтва, которые публикуют прозу)

we-6 - ИД эпизода.
Генерить при создании и запоминать в файле, а при парсинге из файл если нет - тоже генерить.
Проблема: если в гуи выводится эпизод с подэпизодами, то ИД подэпизодов потеряется (либо выводить ИД в аннтоации, но тогда можно удалить)
Вариант: В качестве ИД использовать полный путь. Но здесь при переносе, если ИД где-то хранился в сторонке (профиль пользвоателя и т.д.) то эта ссылка будет утеряна.

we-6. Профиль пользователя.
UserProfile
- load ( user_profile.xml )
- save
- getCountForOpenText
Параметры
1) countForOpenText - Кол-во щелчков чтобы открыть пункт дерева (текст) - 2, 3 - Ограничения - 2=мин, 3=макс. Т.е. выбор из перечисленного.

we-6
- repaint при изм в дереве
- repaint - при изменениях в тексте.

we-6 textToBook
убрать удаление строк

we-6  - фикс ИД. Генерить при создании эпизода, книги...

we-6. toRTF
У каждого элемента доп флаг  - надо ли разрывать страницу перед ним.

we-6
сделать перенос книг в Сборниках и между Сборниками.
== MoveBookFunction
- занести ф-ю также и в контекстное меню

we-6. bug
ID книг, глав - по названию. Причем длинные названия обрезаются и "Звездный странник 1" "Звездный странник 2" - это одинаоковые книжки. Т.е. путаница.
Сделать ИД
- генерить при создании и заносить как вечный атрибут. Тогда переименовывание не страшно - ссылка на книгу-главу останется (в табиках, в профиле пользователя и т.д.).

we-6
- ф-я - в Сборнике - перемещение книг между разделами.

we-6
Ф. Статистика для текущей книги - Обьем
- всего символов
- hidden
- остальное.

we-6. Поиск - выпадашка?
- в загруженных книгах
- во всех книгах Сборника - долгий процесс. - лазиет по файлам
+- в текущйе книге

we-6
bug. Поиск.
Если перейти на другую книгу, то нажимая в Поиске на строки - никакого перехода не происходит. И не ругается.

we-6
1) Сохранение файлов. Диалог работы
- что за файл и прогресс его сохранения - конвертация из текста в обьекты + сохранение в файл (по байтам)
2) то RTF
3) Автосохранение
- сделать synс.  И если запустить урками и авто уже запущено - то как вариант ничего не делать.
- функция блокирует кнопки Сохранить.
- в поле статистики (внизу) - отрисовать бегунок о выполнении операции сохранения.
4) to HTML
- оглавление.
- параметры запроса:
-- под титлом выводить автора (как ссылка на его почту) - да\нет.
-- под титлом выодить текущую дату - требуется в Миниатюрах.
- img - приводить к виду ссылки как в samlib. -- т.е. требуется вводить урл от samlib. - Параметр: УРЛ для изображений для данного конкретного произведения.
<center><img src="/img/a/afanasxew_s/mini/masha.jpg" width="287" alt="Маша, 2 года" height="334" ></center>

we-6. ДОС - Описание
Конвертер. Например надо сконвертить Миниатюры в HTML, чтоыб выложить в samlib. И хочется чтоыб впереди было собрано Оглавление, да еще в требуемое мне количестьво столбцов. Руками все это делать очень уж утомительно. Особенно елси миниатюры все добавляютс яи добавляются.
we-6 Описание
Мне необходима была программа, чтоыб я мог переносить главы как в рамках одного прроизведения, так и между разными проивзедениями. Плюс - конвертеры - чтобы не делать этого вручную.

we-6
bug.
1) При открытии редактора, открывается запомненный текст, курсор переводится на старое положение, но не происходит движения скроллинга.
3) Поиск. Если меняю книгу, то выпадашка Поиска оcтается со старыми значениями - для другой книги - сбивает с толку.

1) Доделать конверт Книги в RTF

we-6
Статистика при сохранении книги показывает число гораздо большее, чем редактор Word на ту же книгу - размер файла, а не кол-во символов текста.
-- это ведь файл на диске - т.е. вместе с xml тегами.

+we-6. bug
При закрытии нескольких текстовых вкладок, какие-то вкладки перетасовываются между собой строками. (Какой-то буфер не очищается?)
Или это автосохранение? - накладываются два процесса - ручное сохранение и авто, а обьект дерева - один.

we-6
В тул-баре - метка - про Изменения. Горит красным - Были не сохраненные изменения. Нажмешь на нее - получишь список что изменилось.  -- Надо ли это? Лишнее?








we-6 -- docum
2) Первый старт.
Если не найден файл user.xml - брать его из папки запуска Редактора - samples_user.xml - который как раз и открывает примеры Сборников.


+Ф-я: Автосохранение
Параметры
- вкл-выкл
- интервал в секундах
== MemoryCheckFunction


1) Пул шаблонов типов книг
Ф-я: создать книгу.
- выпадашка - шаблоны книг (рассказ, повесть, роман, роман из многих книг, зарисовка-наблюдение)
  имеет разный набор дефолтных элементов, и свой набор уровней.
- level=user

5) Пул шаблонов наборов конвертирования - samlib.
Редактор пула шаблонов (отдельная кнокпа в конвертере) - менеджер.
Выпадашка с типами наборов (самиздат...). Кнопки работы с набором - добавить, редактировать.
Применение: Converter - HTML и т.д.

2)
Ф-я (в Статистике) - Показать изменения за текущий день - Проект/Книга.
we-6 - важное
3) Править перед выкладыванием
+- дерево книги - копи-паст - ломается
-- дерево книги - добавить новое - ломается
?- текст книги - пасте - не отрисовываются изменения.
1)
ф-я: сменить вид курсора в текстовом поле - на жирный чтобы лучше было его видно.
6)
Найти java ресурс, куда можно выкладывать WEdit6. Выложить туда. В самиздате - ссылка на ресурс.
- FreeSoft.ru, для распространения бесплатных программ и AllSoft.ru, для платных. AllSoft хорош тем, что они сами ставят защиту от несанкционированного копирования. Для FreeSoft, такую защиту (или регистрацию) нужно предусматривать самому.
- htmlbooks.narod.ru
- http://softportal6nn.com  -- код доступа 2314 - 23 руб на 1 день
7)
ф-я Текста: Закрыть, все вкладки кроме текущего.
8) В шаблоне книги - элемент: Не вошедшее.
9) Тип элемента книги - Эпилог (Вступление, Введение - НЕ глава/Без префиксный). Ему не ставится префикс "Глава 43".
10) Конвертер. Создать вид (набор) конвертации. Кнопка Редактировать должна быть запрещена, если ничего не выбрано в списке видов.

11)
we-6
Шаблон книги. Подглава - Издательства (в которое отправлялось это проивзедение -- аннотация). Аннотация.

2) свойство элементов
= хронология:
- при работе с книгой проверяет чтобы указанные в однйо группе элементы находились строго в заданной последовательности.
- имя группы , номер в группе.

+1) Bookmarks - сделать переход на книгу.

1) ZIP
- на мультиакцию с прерыванием.
- даты файлов - исходные а не новые.

we-6
1) html-export для ЖН, УЗ, Анекдотов.
2) Спросить самиздат - про возможность автоматической закачки (замены) текстов.

+Деплой
- linux-locale - т.е. в свою рабочую директорию пользователя - локальное развертывание
- windows-locale
- linux-common   - (in /usr/lib/wedit6, log4j - /var/log/
- windows-common - (in C:\Applications...)

Поиск
- во всех открытых Сборниках и книга
- во всех известных Сборниках (в неоткрытых книгах) -- свой парсер.

Импортировать - в элемент книги.
- в дереве оглавления на элементе - ПКМ - пункт: Импортировать -- выборка вариантов - TXT, DOC.

we-6
1) Гиперстраница.
а)
Перед титлом в тексте - спецсимвол - hyper_page_start - чтобы данный титл и текст отрабатывался другим функционалом - до спецсимвола окончания - hyper_page_end.
б) edit-save - updateIfOpen  -Обновить текст, если он был открыт где-то еще.
в) Описать поведение страниц TextPanel
- когда на странице открыта только этот элемент
- когад на странце среди простых элементво есть гипер-страница.
11) гиперссылки. Есть какое-то ключевое слово-поле, по которому связка. Например, Издателсьтва. Страницы:
- по темтике - фентези, исторические, проза...
- по оим произведениям - проивзедение и в какие издателдсттва - их овтеты.
- собственно список издателсьтв - внутри - тематика, мои проивзедения.

2) zip - сделать чтобы даты файлов оставались старыми.
3) сортировка в дереве.
4) При открытии всей книги (уровень=0) - переспрос - точно желаете? - борьтба с глюком рабоыт в дереве.
5) ф-я - смотреть список всех файлов, входящих в директорию книги - для просмотра каких-то служебных (doc, zip, img) файлов.
6) конвертация - не толкьо целйо книги но и элемента книги 9например. в миниатбюрах или командирвоках)
7) Ф-я - сохранить текст в файлы - сделать с прогресс-баром.

we-6
Тип главы - гиперссылка
- не может быть выведена в составе других глав
- сохраняется индивидуально, скидывая из редактора в обьект и устанавливая свою книгу в edit=true.


we-6
1) прикрутить функцию отображения синонимов.
2) орфография.
3) В текcте по ПКМ - выскакивает меню, в заголвоке которого - само слово текста на котормо стоит курсор.
Ниже - акции.
Потом - список синонимов, потом - список омонимов.
4) Перенос книг между разделами
- необходимо закрывать такие книги - т.к. в них измениться полный путь файла (ИД книги).
5) Баг. Удалил книгу. Закрыл редактор. Открывается с ошибкой - где-то сохранилась старая прописка-файл.
+7) CloseTools - собрать все функции по закрытию Сборника, Книги - с сохранением, закрытием табиков и всех дочерних элементтов. - Par.GM.close...
- ф-я - Закрыть Сборник.
9) ExportToDoc

we-6
1)
styleName=color_text
subType= - уточнение для цветного текста
 - орфог ошибка
 - найденный текст
 - метка
подтипов может быть нсеколько у одно текста (пересечение подтипов в текстах?)

we6
+1) Показ ява-памяти - навесить тултип - пояснение к этим числам.
2) Создать планировщик (напоминатель задач)  - не обязательно по конкретным дням.

we-6
1)
конверт в pdf, doc.
2) Сборники. Добавить функции:
- вырезать
- копировать
- вставить
3)
убрать применение DefaultMutableTreeNode

we-6
Страницы с перекрсетными элементамим\. - гиперстраницы
Т.е. элементы опсианы в однмо месте но могут выводиться в другом.
Пример
1) Издательства - список издателсьвт и перечень моих книг - перекрс элемент.
2) Книга Кадавр - элемент - изд-ва в которые было отпарвлено.
Свойство элемента - гиперссылка? И настоящий текст хранится где-тов  другом месте?
3) Спец Книга - Дописать, где главы - это ссылки на главы книг, куда складывается материал на дописание.
Т.е. аналог файла common - только вот тексты сами будут автоматом перемещаться в требуемые книги (в главы - Дописать)

we-6
Запускать frame.rewrite через SwingUtil - чтобы всегда было в  AWT-потоке. -- НЕТ

we-6
Поиск - при переходе на страницу - переносить на нее фокус, чтоыб видно было маркер на тексте.
Если тескт спрятан за гарницы страницы - подтягивать скрол.
Возможно текст выделять.

we-6
Атрибут эпизода (главы) - эпиграф. Настраивается также как и текст/аннотация/метка.

we-6. доделать и можно выкладывать
1) дока.
2) Настройка параметрво Сборника
 - автор
 - адрес
 - почта...
+3) Конвертеры
 Здесь при вызове функции, за параметром - имя файла она лезет в текущий BookContent. При изменениях имени файла - записывает в BookContent,
который потом и сохранеят в файле книги как параметры функции.
+4) Переименовать пункт Открыть проект в Открыть Сборник.
5) Две главы с одинаковым именем.
 <id>...</id> - ИД генерить при создании элемента - и навсегда.
 IDGenerator
 - генерит ИД как время в мсек.
 - Хранит последнее ИД.
 - Если новое ИД = LastID - тоггда генерит время в наносек.
1) default type
2) конвертеры (сохранение уровня - книга)
 - samizdat
 - rtf
 - doc
 - pdf



we-6
1) Дата изменения last date в главе автоматом должно переноситься в last date книги. (проекта?)
2)
3) TextPanel. Режим отображения - показать не одну текстовую панель а две рядом.


2) Ф-я: вывести на принтер (как RTF) текущий текст.

we-6
+1) атрибуты эпизода
<attributes>
 <createDate editable=false>
 <lastChangeDate editable=false>
 <...>
Просмотр и редактирвоание - в свойствах элемента.
2) Добавить новый атрибут. Удалить помеченные атрибуты.

+2) Записная книжка.

3) ф-я Создать Сборник.
 - текст справа: Выберите директорию, в которой будет располагаться ваш сборник.
+4) Конвертеры - параметры (рез файл) вынести в тип - уровень книги.
5) /help - директория. содержит файлы
- version.txt
- афйлы справок.
 + по каждой странице-разделе (например - вопросик в тулбаре над текстом).

we-6
1) Записки (bookmarks)
- сны - оформить
2) Поиск
 - также по имени книги - появляется содержание книги - для добавления мыслей в главы.
3) goto
выскакивает список доступных книг. Выбираешь, попадаешь на спсиок глав.
+4) Атрибуты главы (каждая - на своей строке)
- аннотация
- дата создания
- дата последней правки
- размер - НЕт, в редакторе элемента.
- варианты названий.
У каждой книги - свой набор применяемых атрибутов - редактируемый
5) bug  - ??
В главе создаю вторую главу. Делаю два раза сохранить - создает еще две копии этой вторйо главы.
А при удалении, удаляет не ту которую выбрал, а первую по очереди - т.е. удалять надо строго по ИД.
6) Поиск и замена в текущем тексте.
7) Редактирвоать аннотации.
Добавить нвоую анотацию.
Текст в стиле аннотация парсить по переводам строк, применяя конструкцию name=value.
8)
ф-я - расп над книгами - стрелки впарво-влево - как ТВ-пульте - переход между двумя каналами.
переход между двумя последними книгами одного Сборника (или разных)
можно натсраивать глубину перехода - не два а три. можно смотерть спсиок этих книг. натсрапивтаь напарвление движения.
то же и над главами...

+10)
zip - сделать валидацию архива.

+1) нарисовать иконку для программы

+2) диалог загрузки редактора открывать сразу
 + выводить время по каждой позиции


1) Спец Глава - 'Дописать'.
2) Размер фрейма. Если больше текущего экрана - уменьшить до размера экрана.
3) Импорт из ТХТ.
 - создавать файл только по окончательному ОК
 - порядок действий
 -- валидация раздела - выбран ли.
 -- выбор файла для импорта
 -- запрос названия книги
 -- создание файла книги
4) Импорт из DOC.
5) Таблица
6) Редактор параметров Сборника. Добавить:
 - автор
 - e-mail
7) Синопсис - многострочный текст.
8) Аннотация - многострочный текст.
9) Атрибуты книги
+- дата создания
+- дата завершения
- автор, почта - каждый раз при закачке файла книги брать из настроек сборника и заносить в атрибуты.
10) Отрисовка дерева поломалась.
11) нЕ ВЫВОДИТ ДВЕ РАЗНЫХ ГЛАВЫ С ОДИНАКОВЫМ НАЗВАНИЕМ (Разное) - в одной книге.
12) HTML. Не верен перенос строк - одинаково и для str и для sln - ?
13) Раздел - 'Размышления'
 - о Христе
 - о гос-ве
14) Типы книг разбить на отдельные конструкции
 - жанр - фентези
 - статус - завершено, в разработке, в работе
 - форма - роман, повесть, рассказ
 Типы можно добавлять. Но есть дефолтный набор и кнокпа в Редакторе типов книг - сброс на дефолт.
15) Титлы табиков - обрезать длинные.
+16) Доработтаьь - закрытие проекта - удалить табик проекта.

we-6
Выпадашка - set level. Если ничего не выделено - сообщить об этом.

we-6
+1) Инициализация.
Сначала октрыть фрейм.
Потом в мультиакции показывать что происходит: читается Сборник, читаются след книги...
= В конце - фокус напарвить на последнйи открытый текст. (Курсор установить).
2) Поиск
При переходе - переносить и фокус.
3) Поиск
Выстраивать полное дерево - на основе анализируемых обьектов.
+4) Выпадашки level - сделать две. Текст - для отображения текущего состояния.
И выпадккшка - только для смены. После акции - выделение снимается, выпадашка переходит в "--" состояние.

we-6
1)
Отладка старта - выводить System.out.println - показывать этапы инициализации
2) Книга - Чердак - разная солянка.

we-6
1) дерево Сборника. Ф-я - выстроить по алфавиту.
2) Дерево книги. Ф-я: показать книгу в дереве Сборника.
3) Редактор свойств книги
 - нередактируемый параметр - абс. файл книги
4) гиперссылка
Это такая книга, страницы которой можно видеть и из доугих книг. Например, инфа об издателсьтвах.
И редактивроать ?


1) Ф-я Блокнот. Срочное. Список что надо сделать.
2) HTML
 параметр постфикс (продолжение следует) - сделать параметром уровня книги.
3)
Хранить в книге дневник испарвлений. Даты. Причем смежные даты суммивроать. Например: 4,5,6,7 -> 4-7.
И также пропуск в один день - не считать пропуском.
4) HTML
 заключ строка (постфикс) - не удаляется из параметров (не редактируется)
5) частые разрывы текста - <str>
6)
Тип книги - чердак.
На этот тип заведены функции - перенести выделенный фрагмент в книгу (из списка) в эпизод с типом - Доделать.
7) сделать
одинаковое выделение типов эпизодов  в дереве - для разных уровней
- либо - одним цветом
- либо - одной иконкой
8) Типов книги может быть много - набор типов.
 - роман, фентези, написан или еще в работе...
 Можно смотреть списки книг
 - написанные
 - в работе
 - фентези


+1) Поиск.
 - приоткрывать панель поиска после выполнения операции Поиск.

we-6
Ф-я. Для элемента (выбрать уровень + тип) скинуть в аннотацию названия под элементов. Если в названиях нет точки - добавить.

we-6
1)
Отмечать пропуски в книге значком <...>
2)
node -> text
К любому тексту (титл, аннот, текст) применять его align.

we-6
toRTF2. Уровни сохранения параметров
- параметр имени файла - уровня книги
- настройка элементов (bookmarks) - уровня сборника - т.к. типы для всех книг будут одинаковые - to_samizdat, to_черновик для работы и т.д.


1) Реадктор элементов
- слева список элементов
- в шапке - мин размер элементов книги - при удалениях элементов - ругаться что книга(название) содержит элементов...

2) Редактор типов - в списке у каждого - чек-бокс, обьединеный в однй группу - то хоть одно значение да будет выбрано - дефолтный тип.
3) Картинка
 - добавление картинки - добавить опсиание
 - в HTML - картинка в виде таблицы  с описанием внизу.
 - редактор текста - опсиание картинки - как ToolTip ??? Или свой стиль?

+5) Import book from DOC.
6) Ф-я - Римейк.
 Две колонки. Тескт слева - исходный текст.
 Кнопки - скопивроать выделеный (исходный) текст вправо.
7) Ф-я - Показать все книги, в которых есть тип - Доделать.


we-6
Функция - поиск текста в архивах и вывод буфера текста на экран.
(В беседе - странная фраза Сея про помощь Атланту - ни стого ни с сего. Видать что-то случайно стер.)
Поиск в архивах текста - буфер - 20 строк до и 20 строк после.

+1) Применение в тексте символов <>.

we-6
+В шапке писать дату сохранения текущей книги - т.е. это фактически дата самого последнего редактирвоания.
1) Атрибуты книги
 - дата последнего редактирования (сохранения в файл).

we-6
1) Табики глав. Конт меню на табике - закрыть все кроме этого.

we-6
Можно октрывать и в броузере. Подпсиать джар, чтоыб можно ыболо обращаться на лкоальные диски.


we-6
toRTF2
- нет уровней сборника т.к. to_samizdat для ЗС и для ОД - будут выглядеть по-разному.

we-6
ConvertAsText


we-6
1)
типы отмечать всегда - никаких пропусков (null).
если дефолтный тип рапарсился с ошибкой, то вместо недо поставить первый из списка типов.

2) проблемы с чтение из файла конструкций типа &nbsp; - опрпобовать eventReader.getElementText - прим только при event = startElement.

1) Конверт - проблема с конвертацией элемента, не имеющего типа (null тип) - это все наши рабочие элементы.
 - мап нулевого (null - в коде это "рабочий") типа на имеющиеся типы элементов. - чтобы знать как отображать данный элемент.
 Либо это в опсиании структуры книги - где говорится для какого конкретно типа не выводить тип в xml.
 - Вариант 2: Всегда прописывать тип элемента. (Хотя здесь все равно надо задавать дефолтный тип).

1) HTML convert
 a) Элементы
  - align
  - style - не <h1> - потом сделать.  -- усложнит. лишнее ?
 б) Параметры
 - стиль аннотации
 - Стиль текста - не надо задавать - слишком корявый будет файл. Стиль текста используем по умочланию.
 - выводить аннотацию или нет
 - align аннотации
 в) Выводить картинки.
 +г) Типы - не boolean а набор значений
  - выводить
  - не выводить
  - выводить только <...> - вместо заголовка и текста.

+2) Тип элемента - "Сделать, но потом"
 При конвертации в html отображается в виде символов <...> без текста и заголовка.


+1) При окрытии эпизода, если он уже открыт в составе какой-то главы - то просто переходить на эту главу, перемещаясь на этот эпизод.

+1) Аннотации - розовым цветом.

1) Редактор текста - отметить тип стиля.
 Здесь выделить титл не нужно - берется стиль текст от позиции курсора - весь одного стиля. И к нему доабвляется имя типа.

1) Текст в обьекты - суммирование одинаковых стилей - также и для текстов, анотаций, меток...


1) Параметры функции - Проблемы.
    Если случится какой-то косяк и в опсиании параметров влезет еще какой-то параметр, который функцией не используется, то этот параметр так и будет кочевать по профилю пользователя.
    -- Необходима валидация имени добавляемого в функцию параметра на разрешенность такого имени.

1) copy - смотреть в  jsyntax раз у нас коряво (стили назад возвращаются).

1) Копируем текст.
 Выделили текст в одной книге. Вставили его в другую книгу - но вставили в стиле - Часть.
 В исходной книге
  a) весь выделенный текст превратился в 'Часть'
  b) поломалось дерево исходной книги - как бы частично заменилось на дерево из второй книги. (или наоборот?)
 Причем ломается в часть даже тогда когда в исходный и в рез - залили как текст.
 - Здесь, в тексте, применяется системный copy-paste.
    -- Менять его на свой ?
    -- Сначала клонировать текст а потом вызывать super ?



we-6
toHTML - пункт "В проект" - значит скинуть файл в диреткорию проекта-книги, в поддиректорию html - без запрашивания файла вывода.
Но если аткой файл уже есть - переспросить.

8) Парсинг книг в обьект из xml файла и из редактора текстов. Проблемы с крайними пробелами.
-we-6
Разнести создание обьекта
- из xml-парсера - тримим пробелы - могут быть лишние -- ???.
- из текстового редактора - здесь нельзя удалять пробелы - лишнего нет ничего.
+we-6
Преобр текста в обьект - убрать trim для текстов.
+we-6
Stax. Trim делать нельзя - теряются пробелы - на границах участков внутри абзаца (другие шрифты, цвета).

we-6
РАздел - любимые книги.
Автонумерация для html.
В конце - Итого.

we-6
Блок - Об авторе - един на всеь сборник а не книгу.

we-6
1) book.xml
в заголвоке писать версию формата.
Версию менять:
- номер версии - если добавился новый блок.
- номер подверсии - если добавились новые теги.
В Редакторе пропсиать версию, с которой Редактор рабоатет. Если версия у закачиваемой книги выше - ругаться (или предлагать) - т.к. и распарсится криво и часть информации может потеряться.
2) img - в xml форме псиать не абсолютный путь до файла картинки, а относительный, от проекта.

we-6 -> НЮ - два проивзедения: Магдалина, Рассказы.


+0) Вставка картинки - пока не забыл как это делается.
 - Соглашение: картинки для книги грузятся в поддиректорию images - где расположена книга. Если ее нет -  создается.
 - SelectImageFunction
 == Вставку в текст сделал.
  - Сейчас в стиле есть атрибуты:
    -- $ename   = icon
    -- icon     = обьект_иконки. Из него можно получить путь до файла (ImageIcon.description)
 Осталось:
 - парсинг текста в обьект - создание подобьекта картинки
     общий стиль - elementIcon
 - парсинг обьектов в текст
+10) IMG
Опсиание картинки в xml.
- localPath - путь к файлу картинки относительно директории размещения книги.
<img fullPath='' localPath=''  fileName='' width='' height='' align='center' leftmargin='10' rightmargin='' ...>
 посмотреть как выглядит строковое представление стиля 'icon'.


=20) ZIP -- ???
zip - внутри в архиве у файлов дату оставлять старую (что на диске).
-- не нашел таких настроек

2)
Новый bookElement отладить в тексте добавления новой "подглавы".

3)
Фото плезиозавра - в Описание мира.

we-6 - bookmarks
Ссылка на книгу и на точку последней правки.



we-6
TextPanel    - создать контекстное меню на тексте Редактора.
Выделили текст. Правая кнопка. Меню - Пункт: Элемент -> Список элементов книги.
we-6
ф-я: конвертить текст в другую раскладку клавиатуры.
- это к контекст меню.


1) ToHtml - только оглавление + аннотация. - для выделенного.
 Здесь же отображать тип элемента.

1) bug: Кривизна когда вставляешь в текст главы и подглавы. -- разобраться: на уменьшение, на увеличение.
 - это все про cut/paste ???

+6)
Функция в панели текста - Закрыть все открытые тексты. Это когда открытых вкладок слишком много, а по одной закрывать - утомительно.
 - CloseAllTextTabFunction

+1) html - пустые строки  - до и после титла
 Проблема - есть какой-то титл. У него перед ним две пустых строки и после него - две. Конвертация в HTML проходит без этого титла.
Т.е. не выводится только титл, а 4 пустых строки остаются. Что некрасиво - слишком большие пропуски между эпизодами.
 - При скидывании в текст редактора
   -- вставлять пустые строки после титла, согласно заданному значению (либо 2).
   -- По окончании всего текста титла - также вставлять пустые строки (3-4)
   -- После аннотации также вставлять пустые строки (2)
 - При скидывании в обьект
   -- флаг на титл и игнорировать пустые строки (в т.ч. и для анотации) пока не появится текст.
   -- по окончании работы с титлом - trim на все его тексты (т.е. удалить все последние Eol-обьекты).
   -- сам текст также trim - т.е. пробелы игнорируем. Но трим убирает также и переносы строк -- ??? - тогда Не делаем
+2) проблема переноса строк после заголовков, анотаций
 - при конвертации в текст - безусловно добавлять два переноса - стилем заголовка/аннотации.
 - при конвертации в обьект - удалять крайние переносы по trim.
+3) Текст. Может все-таки пустые строки после заголовков игнорировать?
А то сложно форматирвоать в html, когда <h3>title</h3> сам добавляет переносы.

+2)
ctrl-S - Сохранять только измененные.

+4) Undo -> Ctrl/Z


1) bug: Панель дерева книги. Почему-то уходит в макс ширину и обратно не сдвинуть (не сузить),
хотя панель дерева сборника - можно сужать.
 - WTreeRenderer
 - preferedSize на label - ???
 -- Возможно - из-за длинного названия в титле табса, либо в корне дерева.


-1) bug: При скидывании текста из редактирвоания в обьект (или наоборот?) иногда теряются пробелы, в результате чего слова или предложения складываются вместе.
 Возможно, это когда текст почему-то == null. Пока null заменю на пробел.
 -- это из-за trim - убрал.


-2) bug: Нажимаю - Сохранить текст. В дереве Сборника (Книги) - все закрывается и теряется текущий выбранный.
 - TreePanel.rewrite
 - repaintTreeMode = NO
 - rewrite - getCurrentObj -- tree.getLastSelectedPathComponent() - возвращает NULL при выделенном обьекте.
 - rewrite дергается на каждый клик в тексте
 +== если текст был изменен, то панели дерева книги ставить тип для rewrite - перерисовать без акции - т.к. пункт дерева был изменен (и его содержимое). expand=true
     TextPanel.saveTextToNode


+1) bug: Сделал cut/paste группы элементов - почему-то в тексте потерялись пустые строки и переносы строк - свалили текст общей кучей - каждого элемента.
 == clone text

+0) bug: Рисовальщик обьектов дерева.
 Почему-то название обьекта дерева делает слишком длинным - много-много справа пробелов (В ЕМС такого нет).
 - WTreeRenderer -- если не пропускаю через WCellRenderer - то нормальное отображение -- НЕТ.

1) Bug: DeleteSectionFunction, DeleteBookFunction, ф-и закрытия табиков Сборника, книги.
а) Предварительно проверять - может книги для удаления открыты в панелях книг или текстах?
Par.GM - методы-проверки, есть ли в открытых табах книги или тексты, относящиеся к данному Проекту (Книги).
- isBookTabsHasProject ( project );
- isTextTabsHasProject ( project );
- isBookTabsHasBook ( bookContent );
б) Закрыть открытые табики удаляемого-закрываемого раздела

+11) Посмотреть в JSyntax - Undo/Redo

+2) Закрытие по крестику - исп SaveOnlyEdit...

3) Мультиязык.
При инициализации функций брать у них и складывать в Msg - сообщения с ключами.
Либо (что проще) - один общий файл на все функции - как сторонний ресурс (не в jar).

+4) search
 - SimpleSearchFunction

+2) Ф-я: Показать в дереве элемент текущего текста.

1) Дистрибутив
Примеры книг
- папка Демо - примеры (состав Демо)
- два сборника
- применение картинок


4) Help.
- Справочная информация - диалог в виде книги.
   - zip - куда складывается архив и как он называется
- Обновление (ссылки на сайт) -- ???
- О программе (редакторе) - версия, дата, ссылка на сайт размещения - для обновлений  (номер версии, дата, автор, все права защищены.)
- Об авторе - почта, сайт и т.д. (Сергей Афанасьев, s_afa@yahoo.com)


5)
Раздел: История отправок в Издательства и ответы от них.
Либо в самой этой книге.


-2) Сохранение параметров функций в книге.
 Какие функции уровня книги ? (список) -- Экспорт в RTF?


-9) Размеры иконок - Кнопки
 +- GuiTools.createButton - iconPath - именно только имя иконки. Сформировать относительный путь = img/button/img_button_size/имя_иконки
 - Сделать функцию изменения размеров



12) editorPane.setDefaultFont - as JSyntax


0) PopUp - resolver
 Перед открытием меню - пробегает по всем функциям контекстного меню и спрашивает их isAllow. Если нет - отображает в отключенном состоянии.
 (Например, те которые не работают для корня дерева, при выборке корня будут серыми...)
 -- частично реализовано в AddSectionPopupMenu - пункты меню примитивно себя резолвят (на корень дерева)



9) Функция - на .. элемента книги - закрыть все текстовые панели, чтобы элемент можно было перемещать.


12) Закладки.
Перечисляются группы закладок (дерево групп).
При выборе - все текущие книги (сборники) закрываются и открываются книги из группы.
Так?


-4) При удалении в дереве - селектить ближайшего, либо парента (TreeTools) -- Проверить.

5) Ош: Пустая строка стиля текст. Щелкаю на нее мышкой - стиль в выпадашке не меняется (часть).

4) Ош: ZIPAll. Есть не сохраненные деревья (флаг красный) - но нет несохраненных текстов. Жму - сохранить все. В результате - список всех книг. Но табики остались в красном цвете.

5) При создании книги/раздела при вводе русского названия, автоматически перекодивроать его в корявицу и отображать в поле: Имя файла или директории


8) При открытии нового текста - курсор ставить в начало либо на 3-ю строку.


-2) тул-бар - все иконки сдвинуть вправо - т.к. ими пользуются после работы с текстом (панель справа)
 - пока не удается т.к. компоновщик в JToolBar - BoxLayout. А у него - либо вертикально, либо горизонтально.

3) ф-и из тул-бар обязательно должны быть прописаны в Меню.


2) Редактировать описание элемента.  -- BookStructure
 а) Здесь уже не нужны
 - пропуск от заголовка              -- не применятся
 - параметры конвертации в HTML, DOC -- это атрибуты соответствующих функций.
 б) Редактор элементов - сразу высвечивает параметр - макс вложенность в книге. И не удалять элемент, если станет меньше.


3) Редактировать элемент
 Общее:
 - Имя
 - Тип  (согласно данному уровню)
 - Аннотация
 Для книги:
 - Дата создания
 - Дата последнего изменения
 - Автор   -- копируется от соотв параметра Сборника
 - Синопсис -- ??? т.к. синопсис можно генерить из заголовков и анотаций элементов книги.
 PS
 - т.е. в BookContent добавится еще один блок - глобальные параметры книги
    - автор
    - даты
    - счетчик кол-ва изменений
    - синопсисы (варианты)

1)
pop-up меню на элементах дерева книги - Статистика
- общий размер
- кол-во подглав первого уровня
- их размер


2) Диалоги. Акции по клавишам - Enter, Esc
 - Добавления новых разделов, книг, частей, элементов описания книг
        // Вешаем на диалог - слушатель клавиатуры для ESC - когда диалог в фокусе.
        escListener = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                doCancel();
            }
        };
        getRootPane().registerKeyboardAction ( escListener,
                KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0),
                JComponent.WHEN_IN_FOCUSED_WINDOW);



5) Ош. Листенер в тексте работает только на клик мыши. Если двигаешь указатель курсором, то изменения стилей не отслеживаются.

we-6. Показ справа точек поиска и др. указателей - применять для этого бордюр от JScrollPane.

we-6. Конвертер в HTML.
Слева - список имеющихся шаблонов, кнопки: добавить новый, редактировать..
В центре - редактирование шаблона.






1) Изменение иконок меню - отладить
- деревья: сборник, книга
- тулбар
+- над панелями: сборник, книга, текст    -- ChangePanelIconSizeFunction
- меню: глобальное, +контекстное          -- ChangeMenuIconSizeFunction
- иконки на кнопках диалогов



4) Ош: Дерево элементов книги - нельзя добавить элемент другого типа, кроме work (hidden).

5) Иконки для hidden  -- прописать в структуре книги
 - в дерево и т.д. - 16, 24



2) -> pdf    -- SaveAsRTFSelectFunction
 - to PDF, DOC - попробовать применить JReport - xsl или bean model - на будущее.
        we: svj.wedit.controller.function.content.saveas.SaveAsRTFSelectFunction
 - SaveAsRTFSelectFunction

1) commonBook
Спец книга. Имеет редактируемые метки.
Если  в нее заносить текст и помечать их метками, то по команде Sync эти тексты переместятся в указанную в метке книгу в указанный эпизод (типа 'Сделать').

2) Ф-я - Открыть все книги Сборника.

3) Ф-я - toHTML
Здесь также можно создавать список фиксированных вариантов конвертации в html: samizdat, lib_ru и т.д.

4) Смотреть дату последнего релиза книги - т.е. дату формирования RTF, HTML книги.


1) Статистика
 - обший размер книги
 - кол-во глав, подглав...
 - размер по типам глав - work, hidden



4)
Ф-я: Send book to e-mail.
Выборка форматов: xml, pdf, doc... + zip)

5)
Ф-ю saveAll (SaveAllProjectsFunction) - вынести в Par.GM.saveAll   -- ??? для простоты вызова?
либо ProjectTools.saveAll - скинуть на диски безусловно все проекты.
Привязать его к закрытию редактора по крестику и в др. места.

1) Сделать вариант - запускать редактор через броузер, чтобы не геммороится с пропиской java (start_wedit6.html)


1) Переделать структуру в сказках
 - часть    - удалить
 - глава    - work, hidden
 - подглава - work, hidden
 - эпизод   - work, hidden

--> 24) -------------- BookStructure ----------------------
 а) Стили текста, аннотации, метки - занести в описания (BookStructure) как обязательные элементы - только редактировать (без удаления).
  - это так называемые обязательные элементы книги.
  -? обязательные элементы книги можно менять - добавлять, удалять. (??? Например, как работать с новым добавленным ? Ведь нужен функционал, дергающий его.)
 б) Редактировать обязательные элементы. - В списке всех элементов.
21) Элемент описания. TreeIcon  - пока заносится из виджета редактирования. Запоминать в bookStructure путь до файла (в относит) - если есть, и при загрузке вытаскивать картинку.

+25) BookStructureTools
    - getDefaultStructure
      -- здесь по каждому вызову создается новый обьект - чтобы не использовать -- clone ( BookStructure );
      -- после loadBook анализируется, есть ли у книги структура. Если нет - автоматом заносится дефолтная.
    - validateBookStructure
      -- проверяется правильность всей структуры
         - наличие обязательных параметров в элементах (цвет и т.д.).
         - уникальность наименования стилей - styleName.
28) BookStructure - применять:
 - название шрифта (Arial, Times)
 - положение: center, left, right
 - левый отступ: 3
 - правый отступ: 0
26) Загрузка книги - если нет структуры или ошибка - подставить дефолтную, с сообщением об этом.
 В сообщении можно также указать
  - глубина вложенности: 5 (перечень - Книга, Часть ...)
  - обязательные элементы: текст, метка, аннотация
38) Дефолт
   - Дефолтное описание элементов.   -- реализуется в BookStructureTools.getDefaultStructure (см. выше)
   - Дефолтный файл Сборника (для примера), темы: Повести, Рассказы, Фентези, Сказки, Автобиография.
35) Отладить редактирование описания элементов
 - EditDescElementsFunction
 - EditDescElementFunction


we-6
1)
icon для elements
При добавлении - сравнивать размеры с заданными для иконок дерева - если не совпадают - спрашивать - Подогнать размер?
2) см иконки из Биллинга.
3) гугл - java. to PDF, DOC - без применения xsl.
4) гугл - java/ Библиотека на гуи изменение картинок (для подгонки в тексте редактора).
6) гугл - java. алгоритм проверки орфографии.
7) функция - вывести синонимы(?) выделенного слова.



-2) Создать TextListener  - несколько разных
 2.1) Установка флага - было изменение:
 - Изменения в тексте (WDocumentListener)
 - Изменения в дереве книги (???)
 2.2) WDocumentListener - изменения в тексте
  ПС: Это листенер не отслеживает смену курсора.
 2.3) WMouseListener - щелчок мышки в тексте
  +- вытаскиваем стиль данного текста
       - SelectElementFunction
       - BookStructure
  - вытаскиваем цвет символов (только для текста) -- ???
  - вытаскиваем размер символов
  - вытаскиваем шрифт символов
  - вытаскиваем тип символов (bold, italic...)



4) AlignAction заменить на WAlignAction - где также меняется и styleName.


1) Не удается подкрасить текст, сменить выравнивание:
 - SelectAlignFunction  - в тексте меняется, но в файл не сохраняется - почему-то не добавляется к имеющемуся стилю атрибут с нашим именем стиля.
 - SelectStyleFunction  - в тексте ничего не меняется

1) Многострочные
 - аннотация
 - заголовки
 == т.е. сложный тег аннотаций и заголовков

+1) В параметрах пользователя сохранять последние активности - Сборник, книга, глава, курсор.


+2) ZIP - также выводить и полное имя архива (вместе с размером)

5) Правая кнопка на панелях - контекстное меню настройки данной панели
  - тул_бар
        - изменение размеров кнопки


5) close    -- ??? НЕ надо уже. Сохраняем безусловно как в IDEA.
Перечислить все ситуации и классы, которые за это отвечают.
- аварийное закрытие (падение системы, выключение питания)
- фрейм по крестику
- закрытие табика - текста, книги, сборника.
- акция - сохранить все.
- ...


1) Сохранение текста
 === Замечания:
  +- криво сохраняет текст - то сохраняет то пропускает, то несколько строк вдруг сложит в одну.
  +- кривой отступ от заголовка - длинный и если там текст ставишь, то он смещается глубже вниз.
  +- Если в тексте отмечен какой-то текст и мы ушли на другую главу а потом вернулись обратно, то стиль
        текста станет Книга - первый элемент в списке.
        == Сделать первые обьекты выпадашек - пустышки, с названиями : -- элемент --, -- выравнивание --.
  - Занесенный текст вдруг иногда пропадает. Проблемы с XML?
  +- В XML элемент сохранения - <str style="{}"> -- лишнее.
  - Если в тексте нет отмеченных элементов, а выбираешь в списке элементов, то в выпадашке почему-то появляется пустое поле.
 +- просто текст
 +- рендерер - в выпадашке отрисовывать цветом
 - текст со стилем
    - цвет
    - шрифт
    - размер
 - текст с отступами (эпиграф)        -- TextImgWithAlignEditor
 - подзаголовки
 - заголовки с уровнем выше чем исходный
 - метка
 - картинка
 ====
  FileTools.saveBook    - сохранить готовый обьект в файл    -- from SaveAllProjectsFunction - реализовать "Скинуть текст из панелей в обьекты"
  TextToBookNode        - скинуть данные из редактируемой панели в обьект.
  Конвертация текста - обьект  -- doc
  -- TextPanel: +saveTextToNode  / loadTextFromNode  -- желательно

we-6
1) пункт меню - Открыть книгу по ее названию.
Здесь появляется окно со спиcком названий всех книг сборника, в алфавитном порядке.
2) пункт меню - bookmark (add, delete...)
3) Ф-я: Синхр изменения с директорией (с флешки).

we-6
При старте собирать все ошибки инициализации в буфер, а потом выводить их в диалоге (List/ExceptionRenderer)

+10) TextObj - добавить признак наличия переноса строки в тексте - hasEndLine
 - true - выдает <sln> ... </sln>
 - false - <str> ... </str>
 - если true и строка пустая - <eol/>


2) saveTextToObj - сделать как в ИДЕА - безусловно, без переспроса.

3) find - сначала saveTextToObj, потом искать в обьектах
 - Задания
  -- искать во всех сборниках
  -- в текущем сборнике
  -- в текущей книге
 - Параметры:
  -- сколько попыток сохраняется - т.е. сколько табиков в разделе FIND будет (не больше)
  -- сколько находок - макс число (100, 1000)

4) функция над табиками текста - высветить текущий эпизод в дереве оглавления.


2) Текстовая панель, выпадашка со списком элементов.
 а)
 При изменениях в этом списке (добавили новый, сменили цвет) также необходимо чтобы изменился и список в выпадашке.
 - Подпись на событие?
 - Глобальный rewrite, по которому список в выпадашке перегружается.
 б) При переходе курсора в тексте анализировать стиль элемента и отмечать в выпадашке.

2) Кнопки панелей - закрыть текущие.
 - с переспросом
 - выводит полное имя - Сборник / Книга / Глава (FullName)

3) FullName
 - у каждого обьекта можно получить  его полное имя.
 - toHtml()

6) Редактирование аннотаций в тексте -- ? - в редакторе - обычным путем. Или это как-то иначе?


+7) Страницы с деревом содержания книги и с текстом глав - это cardLayuot.
 Т.е. при смене проекта - полностью меняется окошко с содержимым книг - только для данного проекта.
  - Здесь ключ - имя проекта-сборника. Следовательно - проверки на уникальность имен Сборников.
 Тоже и для смены оглавления книг - редакторы только с главами текущей книги.
  - Здесь ключ - совокупное имя: имя проекта + полный путь имени книги (с разделами).
      Т.к. в одном сборнике в разных местах могут лежать книги с одинаковыми названиями
      (например, 'миниатюры' для разных разделов - командировки, дорожные истории)
 Либо для CardLayout генерить ИД (например, системное время) и с ним работать, без привязки к заголовкам.
  -- или полный путь файла проекта, главы и т.д.

+9) Функция элемента - Добавить в...
 - Если здесь на новый элемент нет описания - здесь же запустить диалог по добавлению нового Описания элемента.
 - ERR: При сохранении элемент оказывается на уровне родителя а не внутри него.
    - Ошибка при сохранении в файл? - сохр парвильно
    - Ошибка в чтении?
 - AddBookNodeInFunction


+10) Чтение книги - неверно парсит вложенные элементы.
 - Добавил в Часть Главу. Сохранил. Переоткрыл, а эта глава стала Частью.
 - BookNodeStaxParser

-11) Сделать правильное закрытие Редактора     --- НЕТ. сохраняем все безусловно, как в IDEA.
  - Крестик - то же что и меню Закрыть - проверяет все открытости на не сохраненность. Кидается диалогом - сохранять / не сохранять.
  - shutdown - это аварийное закрытие (дергается толкьо перед падением JVM). Без всяких вопросов пытается сохранить несохраненное в директорию юзера.
     Если сюда приходит из операции юзера (крестик) - то здесь все должно быть сохранено и shutdown ничего не должен делать.
Жмем крестик на Редакторе когда есть добавленные главы (Изменение в дереве книги)
 - Сообщать что есть изменения и предлагать их сохранить.
 - FileTools.saveBook  - сохранение по кнопке "Сохранить весь проект"
 - ERR: файл user_params.xml - сохраняет два раза
     - WEditWindowAdapter.windowClosing - as press krest
     - WEditShutdown

=12) Работа с сохранением (и открытием) файла состояния Сборника - в директории пользователя. - user_params.xml
 Открытие Редактора
 - открывать не последний проект а все открытые.
    Причем также открывать и все ранее открытые содержания книг и их тексты.
 - Полное сохранение данных о состоянии Редактора - в файле current_state.xml в директории юзера.
 = Не реализованы
    - данные по открытым главам
    - положение курсора в тексте глав
    - инфа о текущей открытой цепочке: projectTabIndex, projectTreeIndex...
 = Реализация
  - UserParamsManager.close

-13) Дерево книги. Разрешить мультиселект. Проверить:
 +- paste in
 - paste after
 - в т.ч. и когда недостаточно описаний элементов.
     Может возникнуть ситуация - что-то уже поменяли в обьектах (уровни и парентов частично переписали), а потом - ошибка. И все поломается.

14) Редактирование дерева. Откат операций.  -- надо ли?
 - Свой буфер с макс размером. Отличен от системного буфера для Copy, Cut.
 Вопросы:
 - А как при создании нового, когда уже занесли внутрь текст. И тут - откат операций, в т.ч. и создание нового?


+17 ) Paste - переспрашивать "Вы действительно желаете вставить след элементы? (перечислить) В обьект ""?
 - in
 - after

18) преобразование текста в дерево обьектов
 - Текстовый обьект TextObjWarn
     создается в начале преобразования
     в него складываются те тексте, которым не нашлись хозяева. Например:
        - текст в самом верху, до первого заголовка.
        - какие-то названия и аннотации


=19) Дерево элементов книги
 - Создать все функции работы с деревом.
    +- Добавить в      - AddBookNodeInFunction      
    +- Добавить после   - AddBookNodeAfterFunction
    +- Копировать
    +- Вырезать
    +- Вставить в       -- это функции работы с буфером - от копировать, вырезать.
    +- Вставить после
    +- Удалить элемент  -- удаленные скидываются в буфер - для возможности отката.
    -+ Обновить дерево книги
    +- Открыть элемент на редактирование параметров (Название, Аннотация и т.д.)
    +- Редактировать текст  (Открыть во вкладке Редактора текста)

20) Убрать rowSpace - ?


22) Метка - параметр главы (наравне с аннотацией), кроме корня.
 Примеры: Мишель; Ночи с Элорой; Описание мира. 
 - метка запрещена корню.
 - формат: строка, в которой запрещен символ разделителя меджду метками - точка с запятой.
 - вид параметра - строка со своим стилем, в которой несколько меток отделяются друг от друга точкой с запятой.
 - при добавлении новой метки - проверяется наличие в тексте символа-разделителя. Если есть - ругаться и не создавать.
 - функции
    -- показывать все метки книги (их названия)
    -- отобразить в одной панели все главы, касательно заданной метки.

23) Редактирование главы как элемента дерева
    - Для Аннотации - рядом кнопка - Создать аннотацию из названий подглав
    - Кнопка активна если есть подглавы.
    - При создании из названий, если есть старая аннотация - затирать или добавлять.


27) XML файл книги - заменить табуляцию (левый отступ) на два пробела.

29) rewrite - глобальный цикл перерисовки панелей - при смене табика.
 - Это не цикл смены языка - здесь главное - сменить панели на правильные.
   Цикл смены языка - делать в своем отдельном цикле где главное - дернуть все имеющиеся панели changLang.
 1) Процесс
    - GM.rewrite
    - ContentFrame.rewrite
      - projectTabs.rewrite
      - bookCard.rewrite
      - textCard.rewrite
 2) projectTabs.rewrite
  - select - getCurrent.rewrite
  - edit   - цикл вглубь до самых текстов - для определения наличия изменений
 3) bookCard.rewrite  (textCard.rewrite)
  - id  = parent.getCurrentId
  - if ( id = nowId )
     - ничего не делать
    else
    {
      if ( есть такая Ид в списке )
        showCard ( id )
        взять новую текущую TabsPanel и выбрать в ней первый табик - ?
      else
        выбрать emptyCard
    }


+31) Открытие проектов, книг, глав - проверить на наличие таких уже открытых.
 Если уже есть открытая - просто перейти.
 Реализация:
 1) ИД табика.
  - Сборники - директория сборника
  - Книги - файл книги.
  - Глава - полный путь имени до корня.
 2) При открытии - вычисляется ИД табика и смотрится - есть или нет.
  - GeneralManager - containBook, selectBook и т.д.
  - Сборник -- OpenProjectFunction
  - Книга   -- OpenBookFunction
  - Глава   -- OpenTextFunction

32) Copy - итоговый диалог.      --- ??? надо ли? ведь все это есть в стартовом диалоге.
 - Скопирован обьект такой-то.
 - Глубина вложенности - такой-то глубины
 - Кол-во подобьектов - ... шт.
 - Обьем - ... байт


+34) Save ALL
 - диалог окончания. Список книг которые были сохранены, имена файлов, размеры.

+36) Типы элементов        --- НЕТ. Просто делаем несколько элементов одного уровня но с разными типами. А управляем всеми элементами списка.
 - дефолтный массив  - work, hidden.
 - свой редактируемый массив, хранится в книге.

37) Перенос глав, имеющих подглавы, уровнем ниже. Paste
 - сначала анализ на достаточность вложенности описаний глав. Если нет - Ругаться с предложением самому создать столько-то штук.
     - здесь же запустить диалог по добавлению нового Описания элемента. -- ??? лишнее


+40) Сохранять описание элементов в файле книги.

41) Аннотация на главу -  может быть раскидана по главе (разными кусками).

42) Функция Статистика - это Информация.
 Показывает
  - Открыто сборников книг (кол-во и перечень названий)
  - Открыто содержаний книг - в разрезе сборников
  - Открыто текста - в разрезе сборников и книг.
  Есть возможность перехода по линку - на вкладку содержимого, на текст.

43) Панель статуса-статистики.
  Разбита на три части
  - левая - все компоненты смещаются влево.
  - правая - все комп смещ вправо (исп память)
  - центр
  Функции могут добавлять сюда свои элементы.

44) В тексте - Метки
  - поиск (найдено)
  - вопрос - служебный текст, вроде TODо - можно выводить список всех вопросов-todо - в рамках книги (типа узких мест в книге) 

45)
Создание много сюжетного произведения. (Командировки)
Есть сюжетные линии которые и перемешиваются. (Дерево сюжетных линий чтобы было ясно - чья глава следующая)
Функция - getNext - покажет, кто следующий по очереди.

46)
Флаг - показать темы в заголовках либо нет.
Т.е. у каждой главы есть возможность привязаться к темам (сюжетным линиям). Причем к нескольким, по желанию.
Сюж линии отображаются в атрибутах главы.
Сюж линия отображается перед названием, в кавычках, возможно другим цветом.
Причем можно задавать рекурсию вверх - до куда (например, до главы).
Если сюж линий несколько - суммируются через запятую.

47)
Акция / Content - Диалогове окно.
Вводится (писателем) список названий глав и их описаний. Он превращается в главы с аннотациями (в дерево книги).

48)
Маркер темы.
Задача - собрать все что помечено данным маркеров - в один файл.
Например, какая-то сюжетная линия, разбросанная по книге.
Обратный вариант - link.

49)
Настройки / Автосохранение
 - вкл-выкл.
 - время периода (сек, мин, час)

50)
Изменить 'Редактирование Описания' на 'Редактирование Структуры'


51) Старт системы - есть системная панель где можно посмотреть что поднялось, что нет и почему.

52) Пример книги (здесь же - и пример структур)
к структуре книги:
 raznoe
   исправить
      обязательно
      под вопросом

Структура книг
В разделе Разное - иметь
- Править / Первая очередь

- common-блок - Можно здесь писать эпизоды, а потом привязывать к книге - к ее чердаку либо к конкретному эпизоду.
     Если был написан эпизод и не привязан ни к какой книге - в общую кучу.

+53) Описание структуры книги содержится в самой книге в блоке - book_structure.

54) может, редактирвоание HTML ? тогда можно и иконки добавлять и таблицы и стили. Просто теги HTML не выводить  на экран, а всю инфу об этом забивать в стиль текста?
     -- т.е. отображать именно HTML текст. Но иметь возможность его редактирования.
     (гугл - java, редактирование html)

55) ошибки выводить в строке статуса

56) возможность многострочного поиска-замены - данные вводятся в textArea

57) Диалог - параметр - элемент на который надо переводить фокус при открытии диалога.

58) Функция в окне Главы  - Показать эту главу на дереве содержания.

59) Link
 - Главы - как линки. Т.е. источник один, но отображаться может в разных местах, и на разных уровнях.
   Применение: В отдельном месте собрана какая-то сюжетная линия, разбитая на отрезки. И эти отрезки разбрасываются по произведению.
   Редактирование происходит в одном месте.
   Удаление источника - только после удаления линков на него.


60) (Документация) Ф-я Help - Справка
 - О программе: Работает со сборниками, в которые входят разделы, книги. Допустимо работать одновременно с несколькими сборниками.
 - Система ведения всех книг.
    - работать с любой книгой - доступен список книг.

61) Дерево, Ф-я: Флаг - показывать у элементов (в дереве) их размеры в байт-символах, либо не показывать (динамический переключатель).

62) При удалениях и переносах - обязательно проверять на открытость данной главы (элемента).
 либо закрывать, либо переназначать линк (смотря как организовано открытие текста элемента).

63) FileTools.loadUserFile (fileName);

64) params
 FunctionType - user, book

65) Настройки уровня User
 - декоратор

66) При накате параметров (Пользователя, Книги) - формируется журнал ошибок, который можно просмотреть.

67) Ситуация: При редактировании описаний удаляем какой-то тип, который используется в тексте. Например hidden. ???

68) Ситуация: Текст, но нет ни одного заголовка-элемента.
 Варианты - для Сохранения:
 - Создать главу и добавить ее в корень.
    Минус: Если такая глава уже есть. Будет еще одна?
 - Занести этот текст в корень.

69) Ситуация: Текст. Какой-то текст находится в самом начале перед заголовком.
 Варианты:
  - Занести этот текст в спец обьект и в конце преобразования текста в обьекты посмотреть, если спец-обьект не
     пустой - добавить его в последний обрабатываемый элемент. С комментарием.

70) Меню: Сервис / Просмотр внутреннего буфера
 - Обьект: Глава. Уровень 2. Наименование: Вступление. Размер: 51236 байт.


72) Функция - закрыть Проект, Книгу, Текст.
     - здесь удаляется табик.
     - возможно - крестик на табике - который также является индикатором редактирования (цвет: зеленый, красный).
     - При закрытии табика - если были изменения - запрашивать на сохранение в файле либо автоматом сохранять -- это для борьбы 
с ситуациями когда были изменения в текстах книги, но потом все табики текстов были закрыты и при закрытии Редактора он ничего не сохранит - нигде меток не осталось.
Второй вариант - переносить флаг редактирования на bookContent.
   = При  закрытии текста edit переносится на книгу. При закрытии книги - если edit - выскакивает окошко - Сохранить / Не сохранить
        (вдруг юзер захочет отменить все изменения? не руками же это делать)
  = Реализация:
   - TabIcon - в методе paint подменяются иконки в зависимости от состояния данной editPanel.

+73) Выборка пункта дерева для которого еще не создана табс-панель (например, для выбранной книги - ни одной из глав не открыто,
     либо для Сборника - не открыты книги).
    Здесь неизвестно что отображать и поэтому отображается предыдущая табс-панель.
    Предложение - создать пустую табс-панель с одни табиком в котором help либо какая-то картинка. Надпись - ничего еще не открыто.
   - EmptyEditablePanel
   - CardPanel.addEmpty
   - ContentFrame.createBooksPanel
        bookContentCardPanel.addEmpty();
        bookTextCardPanel.addEmpty();

+74) Если выбрано Пусто - кнопки управления над панелью генерят ошибки без текста (null).
        - сделал генерацию ошибки с текстом - Не выделено.

+75) ERR: При старте Редактора изначально выбирается Пусто - даже если есть такая карта.

+76) Не срабатывает двойное пусто. Т.е. если был открыт какой-то текст, а потом переключили Сборник на другой, в котором нет
 открытых книг и текстов, то табик с книгами переключается на Пусто, а табик с текстами - нет.

77) Вариант запуска - из html (aplet)

78) вариант работы со сборником - с архивом.
 Т.е. весь сборник упакован в один файл. При работе - распаковывается. По окончанию работы - снова упаковывается.
 
79) Иконки - хранить в одном файле. Смена размеров - ресайз иконки.
 вопрос - прозрачность сохранится?
1.7) ERR: Размер иконок. Ставим 16 - выбирает 24. И наоборот.


80) Закрытие табика - здесь же - отображение - было изменение -- не было.
 а) изменение цвета иконки в табике.
  Варианты:
   - переписать класс Икон - чтобы иконка сама себя перерисовывала - в зеленый, красный. А его дергать по rewrite.
   - каждый раз менять иконку у табика по tabbedPane.setIcon ( index, icon );
 б) как в табике различать где был произведен щелчок - на тексте или на иконке. (Отработать в JavaSample)
  - брать источник щелчка ?

+81) При открытии текста, проверять:
 - может данная часть (текст) уже открыта в составе другой части
 - может подчаcти данной части уже открыты в составе других частей?
 ===
    ContentFrame.addBookNode      - проверка условий
    BookTools.checkContainNode    - реализация

82) В BookContent добавить обьект BookAttribs - который хранит атрибуты книги. По умолчанию при создании автор берется из Сборника.
- Create date :  Дата создания.
- Type : фэнтези
- Forma : роман
- Author : Сергей Афанасьев
    - Address :
    - Phone :
    - Cell phone :
    - ICQ :
    - E-mail : s_afa@yahoo.com
    - www :
- Рабочие названия: Снова Мегаполис
- ModifyDate: 15.05.2012 15:42:13.500 - дата последнего изменения

83) Кнопка - скрыть панели с деревьями (убрать их влево, как в IDEA)

84) Сохрарение размера фрейма.
 - если == экрану то прописывать слово fullScreen. чтобы при открытии на большем мониторе так же открылся во весь экран.

85) Пример Сборников
 Сборники
 - Студент Иванов.
 - Студент Петров.
 - Редакция АСТ.
 - Редакция Новый мир.
    - разбивка по годам, внутри - по месяцам.
    - корзина
    - чердак.
 - Литература
    - любимые книги
    - перечитки
    - замечания о прочитанном

86) icon size - прописать мин и макс значения - например: 16 / 48.
 В толтипе на изменение прописать - значение по умолчанию = 24.
 макс - 1 / 10 экрана

87) Возможность открывать сторонние файлы
 - расширения книги wedit6 - не привязанные к сборникам.
 - текстовые
 Привязывать к какому-то левому Сборнику? (Чердак?)
 - лучше - открывать в отдельном фрейме. Кнопки - добавить в сборник...

88) add часть внутрь - анализ на наличие описания части. Если уже нет - ругаться, либо запрещать функцию.

89) BookNode - сделать ID сгенерированное по long. Для унвиерсальности при сравнениях и поисках - т.к. полный путь изменяется при перемещениях узла, книги.

90) Над текст-панелью кнопка Сохранить - сохранить текущую книгу.

91) На панелью книги - титл выбранного сборника.

92) Над панелью текста - титл выбранной книги.

93) Синхронизация всех панелей - по rewrite - как в EMS Profile Edit.

94) move глава
  - ранее открытая (в т.ч. и вложенная в другую открытую) - варианты:
  - просто закрывается
  - остается открытой но ИД (полный путь) переписывается

95) Служебные табики (Поиск...)
 - расположены под окнами деревьев. Окно текста - занимает полный обьем.

96) Файл / Импорт
 - из формата wedit
 - из формата Word (OpenOfice)

97) Text panel - слежение за состоянием стиля текущего текста.
  - mouseListener - анализ стиля текущего места и выделение кнопок управления
  - если выбрано форматирование - нажимается кнопка формата текста.
  - если заголовки - отмечаются в выпадашке.

98) Кнопка формата текста для текст-панели

99) Картинки
  - правая кнопка
  - изменить размер. Причем размер изменяется толкьо для отображения, по resize. Сам файл картинки остается без изменения.
  - просмотреть исходную картинку - т.е. в масштабе 100% (в окне диалога)

100) Список открытых книг, глав - хранить в отдельном файле - Состояние проекта (а не в самих книгах).

101) Вкладка текста - пока без сохранения в файле.
 - правый отступ
 - левый отступ
 - тип текста (заголовки и т.д.)

102) Флаг - было изменение в тексте (но не сохранено) - также отображется в табике в названии главы, книги, проекта (по нарастающей - взаимосвзяь).
 - т.е. титл табика, а здесь еще и динамически изменяемая иконка. Возможно - крестик, нажав на который, можно закрыть данный табик.
 - Здесь надо переписать JTabbedPane (создать свою табс-панель т.к. JTabbedPane не позволяет себя расширить), что тянет за собой очень многое (ComponentUI для своей таб-панели и т.д.)

103) Аттрибуты, входящие в атрибуты тегов name и т.д. Обязательно парсить на наличие символов кавычек ( " ' ) - иначе, попав в XML они испортят всю структуру.
 - Здесь надо менять их на &cap; - и потом обратно.

104) Stax - при ошибках должен выводить в лог (на экран) всю ошибочную строку (вместе с ее порядковым номером, и номером ошибочного символа в строке).
 - Проверить при наличии в тегах name дополнительных (лишних) кавычек.

105) Редактирование элементов. Добавить кнопки:
 - Установить набор по умолчанию (.. Tools.getDefaultBookStructure() )
 - Установить исходную
     - здесь при старте диалога запоминается старая BookStructure (по clone).

106) Подписка на события. action_group
      - textPosition
         событие генерится при изменении положения курсора в панели редактирвоания текста.
         Ловятся акциями отображения списка элементов (в выпадашке) - для оперативного изменения состояния, а также акциями смены цвета, шрифта, размера букв и т.д.
         (т.е. акциями текстового редактора)
         
108) Для римейков - связка - источник -- наша глава.

+110) zip      -- ZipAllProjectsFunction
 - здесь необходимо сначала скинуть тексты в обьекты, а потом все в файлы. - без переспроса.

+4) Создать рук-во пользователя - user_guid.xml

111) Вставка картинок в тексты - изменять их размер под размер страницы - автоматически.

112) Разделы: Закладки, Избранное - для быстрого переключения между текстами, книгами.

113) Меню: Добавить книгу из файла book.

114) исправить в заголовках применение кавычек
